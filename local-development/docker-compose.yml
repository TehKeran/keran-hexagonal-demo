# Use no auth
version: "3.5"

services:
  quorum-broker:
    image: debezium/kafka:2.0
    container_name: quorum-broker
    restart: always
    ports:
      - ${PORT_BROKER}:8670
      - "9092:9092"
    environment:
      CLUSTER_ID: '${BROKER_CLUSTER_ID}'
      NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@quorum-broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      KAFKA_LISTENERS: INTERNAL://quorum-broker:9092,EXTERNAL://:8670,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://quorum-broker:9092,EXTERNAL://localhost:8670
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAME: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_MESSAGE_MAX_BYTES: ${KAFKA_MESSAGE_MAX_BYTES}
      AUTO_CREATE_TOPICS_ENABLE: 'true'
      CREATE_TOPIS: "\
      local.keran.test.test:1:1:delete, \
      local.keran.test2.test2:1:1:delete"
    networks:
      - dockernet

  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    container_name: kafdrop
    depends_on:
      - quorum-broker
    restart: always
    ports:
      - ${PORT_KAFDROP}:9000
    environment:
      KAFKA_BROKERCONNECT: quorum-broker:9092
    networks:
      - dockernet

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.0
    ports:
      - "9021:9021"
    environment:
      - CONTROL_CENTER_BOOTSTRAP_SERVERS=quorum-broker:9092
      - CONTROL_CENTER_REPLICATION_FACTOR=1
    networks:
      - dockernet
    depends_on:
      - quorum-broker

  postgres:
    image: uselagoon/postgres-13
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${PORT_POSTGRES}:5432
    volumes:
      - shared_database:/var/lib/postgresql/data
    networks:
      - dockernet

  pgadmin:
    image: dpage/pgadmin4
    container_name: pg_admin4_container
    restart: always
    ports:
      - ${PORT_PGADMIN}:80
    networks:
      - dockernet
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - pgadmin:/var/lib/pgadmin

networks:
  dockernet:
    name: cdm-network
    driver: bridge

volumes:
  shared_database:
  pgadmin: